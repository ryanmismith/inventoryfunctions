mutate(
x = sum(EXPF)
)
}
temp$x <- round(temp$x, 1)
return(temp$x)
}
BAPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
y <- x <- NULL
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF = FALSE) {
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
} else {
temp <- temp %>%
filter(DBH > 10) %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
}
y <- temp$x
y <- round(y, 1)
return(y)
}
BAPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
y <- x <- NULL
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF = FALSE) {
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
return(round(temp$x, 1))
} else {
temp <- temp %>%
filter(DBH > 10) %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
return(round(temp$x, 1))
}
}
BAPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF = FALSE) {
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
return(round(temp$x, 1))
} else {
temp <- temp %>%
filter(DBH > 10) %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
return(round(temp$x, 1))
}
}
source('~/Thesis/R Script/My Scripts/Packages/inventoryfunctions/R/TPH.R', echo=TRUE)
BAPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF = FALSE) {
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
return(round(temp$x, 1))
} else {
temp <- temp %>%
filter(DBH > 10) %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
return(round(temp$x, 1))
}
}
BAPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF == FALSE) {
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
return(round(temp$x, 1))
} else {
temp <- temp %>%
filter(DBH > 10) %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
return(round(temp$x, 1))
}
}
BAPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF == FALSE) {
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
} else {
temp <- temp %>%
filter(DBH > 10) %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
}
x <- round(temp$x, 1)
return(x)
}
TPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF == FALSE) {
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
} else {
temp <- temp %>%
filter(DBH > 10) %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
}
x <- round(temp$x, 1)
return(x)
}
document()
devtools::document()
> devtools::document()
devtools::document()
TPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF == FALSE) {
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
} else {
temp <- temp %>%
filter(DBH > 10) %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
}
x <- round(temp$x, 1)
return(x)
}
library(inventoryfunctions)
trees <- read_csv('/Users/ryansmith/Thesis/Practice Data/PEF.Inv.Data.for.FVS.TREE.csv')
trees_2010 <- trees %>% filter(YEAR == 2010)
trees_2010 <- trees_2010 %>%
mutate(
DBH = DBH*2.54,
HT = HT*0.3048,
EXPF = EXPF*2.47,
Bark = c('ib'),
Planted = FALSE,
SDIPlot = SDI.Plot(STAND, PLOT, TREE, DBH, EXPF),
SDIMax = SDI.Max(STAND, PLOT, TREE, SP, EXPF),
BA = BA(DBH),
CCF = CrownCompF(STAND, PLOT, TREE, SP, DBH, EXPF),
ID = Unique.ID(STAND, PLOT),
RD = (SDIPlot/SDIMax),
BAPH = BAPH(STAND, PLOT, BA, EXPF),
TPH = TPH(STAND, PLOT, DBH, EXPF),
TPH2 = TPH(STAND, PLOT, DBH, EXPF, CUTOFF = FALSE)
)
trees_2010 <- trees_2010 %>%
mutate(
DBH = DBH*2.54,
HT = HT*0.3048,
EXPF = EXPF*2.47,
Bark = c('ib'),
Planted = FALSE,
SDIPlot = SDI.Plot(STAND, PLOT, TREE, DBH, EXPF),
SDIMax = SDI.Max(STAND, PLOT, TREE, SP, EXPF),
BA = BA(DBH),
CCF = CrownCompF(STAND, PLOT, TREE, SP, DBH, EXPF),
ID = Unique.ID(STAND, PLOT),
RD = (SDIPlot/SDIMax),
BAPH = BAPH(STAND, PLOT, BA, EXPF)
)
trees_2010 %>%
mutate(
TPH = TPA(STAND, PLOT, DBH, EXPF)
)
library(inventoryfunctions)
trees_2010 %>%
mutate(
TPH = TPH(STAND, PLOT, DBH, EXPF)
)
TPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF == FALSE) {
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
} else {
ifelse(DBH < 10, EXPF == 0, EXPF == EXPF)
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
}
x <- round(temp$x, 1)
return(x)
}
trees_2010 %>%
mutate(
TPH = TPH(STAND, PLOT, DBH, EXPF)
)
View(trees_2010)
trees_2010 <- trees_2010 %>%
mutate(
TPH = TPH(STAND, PLOT, DBH, EXPF)
)
View(trees_2010)
trees_2010 <- trees_2010 %>%
mutate(
TPH1 = TPH(STAND, PLOT, DBH, EXPF, CUTOFF = FALSE)
)
View(trees_2010)
TPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF == FALSE) {
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
} else {
ifelse(DBH < 10, EXPF = 0, EXPF)
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
}
x <- round(temp$x, 1)
return(x)
}
trees_2010 <- trees_2010 %>%
mutate(
TPH2 = TPH(STAND, PLOT, DBH, EXPF, CUTOFF = TRUE)
)
TPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF == FALSE) {
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
} else {
ifelse(temp$DBH < 10, temp$EXPF = 0, temp$EXPF)
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
}
x <- round(temp$x, 1)
return(x)
}
TPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF == FALSE) {
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
} else {
ifelse(temp$DBH < 10, temp$EXPF = 0, temp$EXPF)
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
}
x <- round(temp$x, 1)
return(x)
}
TPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF == FALSE) {
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
} else {
temp$EXPF <- ifelse(temp$DBH < 10, 0, EXPF)
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
}
x <- round(temp$x, 1)
return(x)
}
trees_2010 <- trees_2010 %>%
mutate(
TPH2 = TPH(STAND, PLOT, DBH, EXPF, CUTOFF = TRUE)
)
trees_2010 <- trees_2010 %>%
mutate(
TPH3 = TPH(STAND, PLOT, DBH, EXPF, CUTOFF = TRUE)
)
View(trees_2010)
trees_2010 <- trees_2010 %>%
mutate(
TPH4 = TPH(STAND, PLOT, DBH, EXPF, CUTOFF = FALSE)
)
TPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF != TRUE) {
temp$EXPF <- ifelse(temp$DBH < CUTOFF, 0, EXPF)
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
} else {
temp$EXPF <- ifelse(temp$DBH < 10, 0, EXPF)
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
}
x <- round(temp$x, 1)
return(x)
}
TPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF != TRUE) {
temp$EXPF <- ifelse(temp$DBH < CUTOFF, 0, EXPF)
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
} else {
temp$EXPF <- ifelse(temp$DBH < 10, 0, EXPF)
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
}
x <- round(temp$x, 1)
return(x)
}
trees_2010 <- trees_2010 %>%
mutate(
TPH5 = TPH(STAND, PLOT, DBH, EXPF, CUTOFF = 3)
)
trees_2010 <- trees_2010 %>%
mutate(
TPH6 = TPH(STAND, PLOT, DBH, EXPF, CUTOFF = 7)
)
trees_2010 <- trees_2010 %>%
mutate(
TPH7 = TPH(STAND, PLOT, DBH, EXPF, CUTOFF = TRUE)
)
trees_2010 <- trees_2010 %>%
mutate(
TPH8 = TPH(STAND, PLOT, DBH, EXPF, CUTOFF = 20)
)
View(trees_2010)
library(inventoryfunctions)
AGS.UGS(1, 1, 2, 'RO', 25, 12, .5, 'UGS')
AGS.UGS(1, 1, 1, 'RS', 30, 14, .5, 'AGS')
trees <- read_csv('/Users/ryansmith/Thesis/Practice Data/PEF.Inv.Data.for.FVS.TREE.csv')
trees <- read_csv('/Users/ryansmith/Thesis/Practice Data/PEF.Inv.Data.for.FVS.TREE.csv')
trees_2010 <- trees %>% filter(YEAR == 2010)
View(trees_2010)
trees_2010 <- trees_2010 %>%
mutate(
DBH = DBH*2.54,
HT = HT*0.3048,
EXPF = EXPF*2.47,
Bark = c('ib'),
Planted = FALSE,
SDIPlot = SDI.Plot(STAND, PLOT, TREE, DBH, EXPF),
SDIMax = SDI.Max(STAND, PLOT, TREE, SP, EXPF),
BA = BA(DBH),
CCF = CrownCompF(STAND, PLOT, TREE, SP, DBH, EXPF),
ID = Unique.ID(STAND, PLOT),
RD = (SDIPlot/SDIMax),
BAPH = BAPH(STAND, PLOT, BA, EXPF),
TPH = TPH(STAND, PLOT, DBH, EXPF)
)
TPH <- function(Stand, Plot, DBH, EXPF, CUTOFF = TRUE){
temp <- tibble(Stand, Plot, DBH, EXPF)
if(CUTOFF != TRUE) {
temp$EXPF <- ifelse(temp$DBH < CUTOFF, 0, EXPF)
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
} else {
temp$EXPF <- ifelse(temp$DBH < 10, 0, EXPF)
temp <- temp %>%
group_by(Stand, Plot) %>%
mutate(
x = sum(EXPF)
) %>%
select(Stand, Plot, x)
}
x <- round(temp$x, 1)
return(x)
}
trees_2010 <- trees_2010 %>%
mutate(
DBH = DBH*2.54,
HT = HT*0.3048,
EXPF = EXPF*2.47,
Bark = c('ib'),
Planted = FALSE,
SDIPlot = SDI.Plot(STAND, PLOT, TREE, DBH, EXPF),
SDIMax = SDI.Max(STAND, PLOT, TREE, SP, EXPF),
BA = BA(DBH),
CCF = CrownCompF(STAND, PLOT, TREE, SP, DBH, EXPF),
ID = Unique.ID(STAND, PLOT),
RD = (SDIPlot/SDIMax),
BAPH = BAPH(STAND, PLOT, BA, EXPF),
TPH = TPH(STAND, PLOT, DBH, EXPF)
)
trees_2010 <- trees_2010 %>%
mutate(
TPH8 = TPH(STAND, PLOT, DBH, EXPF, CUTOFF = 20)
)
tempvol <- mapply(KozakTreeVol, 'ib', trees_2010$SP, trees_2010$DBH, trees_2010$HT)
trees_2010$TreeVol <- tempvol
trees_2010$TreeVolPlot<- tempvol * trees_2010$EXPF
trees_2010 <- trees_2010 %>%
group_by(ID) %>%
arrange(desc(DBH), .by_group = TRUE)
trees_2010 <- trees_2010 %>%
mutate(
BAL = BA.Larger.Trees(ID, DBH, BA),
)
trees_2010 <- trees_2010 %>%
group_by(ID) %>%
arrange(desc(DBH), .by_group = TRUE)
trees_2010 <- trees_2010 %>%
mutate(
CCFL = CCF.Larger(ID, SP, DBH, EXPF)
)
View(trees_2010)
library(devtools)
library(roxygen2)
document()
document()
