'Hardwood',    'Hardwood',     # OH=other hardwoods
'Softwood',    'Softwood',     # OS=other softwoods
'Betula',      'Birch',        # PB=paper birch
'Prunus',      'Cherry',       # PC=pin cherry
'Prunus',      'Cherry',       # PR=pin cherry
'Populus',     'Aspen',        # QA=quaking aspen
'Betula',      'Birch',        # RB=river birch
'Acer',        'Maple',        # RM=red maple
'Pinus',       'Pine',         # RP=red pine
'Pinus',       'Pine',         # RN=red pine
'Quercus',     'Oak',          # RO=red oak
'Picea',       'Spruce',       # RS=red spruce
'Betula',      'Birch',        # SB=Sweet birch
'Carya',       'Hickory',      # SH=Shagbark Hickory
'Acer',        'Maple',        # SM=sugar maple
'Acer',        'Maple',        # ST=striped maple
'Larix',       'Larch',        # TA=larch/tamarack
'Fraxinus',    'Ash',          # WA=white ash
'Thuja',       'Cedar',        # WC=northern white cedar
'Quercus',     'Oak',          # WO=White Oak
'Pinus',       'Pine',         # WP=white pine
'Picea',       'Spruce',       # WS=white spruce
'Betula',      'Birch',        # YB=yellow birch
'Other',       'Other'),       # other
ncol=2,byrow=TRUE)
sprow = match(SPP,SPcodes)
sprow[is.na(sprow)] = length(SPcodes)
# Common Name [1,] : Genus [2,] :
return(c(Common=SPCommonName[sprow],
Genus=attrs[sprow,1], Simple=attrs[sprow,2]))
}
Genus('BA')
a <- Genus('BA')
a[1,]
1[2]
a[2]
library(devtools)
library(roxygen2)
library()
devtools::document()
document()
library(inventoryfunctions)
setwd('/Users/ryansmith/Thesis/MasterData/Clean/Tree Data Clean')
library(readr)
Species_Codes <- read_csv("Species_Codes.csv")
View(Species_Codes)
Species_Codes$names[28] <- "Sweet Birch"
Species_Codes$names[19] <- "Other Softwood"
Species_Codes$names[18] <- "Other Hardwood"
Species_Codes$names[14] <- "Eastern Hophornbeam"
Species_Codes$names[16] <- "Non-Commercial"
write.csv(Species_Codes, "Species_Codes.csv")
library(readr)
Species_Codes <- read_csv("Species_Codes.csv")
View(Species_Codes)
library(rgdal)
install.packages(c("broom", "cachem", "cli", "cluster", "cutpointr", "DALEX", "data.table", "deldir", "dtplyr", "farver", "gert", "ggraph", "ggsignif", "gifski", "glmnet", "Hmisc", "isoband", "lifecycle", "lubridate", "mathjaxr", "MatrixModels", "mgcv", "mime", "pillar", "pkgload", "ps", "quantreg", "RcppParallel", "rgl", "rio", "rmarkdown", "rstatix", "SparseM", "splines2", "svglite", "testthat", "tibble", "tidyr", "units"))
install.packages(c("broom", "cachem", "cli", "cluster", "cutpointr", "DALEX", "data.table", "deldir", "dtplyr", "farver", "gert", "ggraph", "ggsignif", "gifski", "glmnet", "Hmisc", "isoband", "lifecycle", "lubridate", "mathjaxr", "MatrixModels", "mgcv", "mime", "pillar", "pkgload", "ps", "quantreg", "RcppParallel", "rgl", "rio", "rmarkdown", "rstatix", "SparseM", "splines2", "svglite", "testthat", "tibble", "tidyr", "units"))
install.packages(c("broom", "cachem", "cli", "cluster", "cutpointr", "DALEX", "data.table", "deldir", "dtplyr", "farver", "gert", "ggraph", "ggsignif", "gifski", "glmnet", "Hmisc", "isoband", "lifecycle", "lubridate", "mathjaxr", "MatrixModels", "mgcv", "mime", "pillar", "pkgload", "ps", "quantreg", "RcppParallel", "rgl", "rio", "rmarkdown", "rstatix", "SparseM", "splines2", "svglite", "testthat", "tibble", "tidyr", "units"))
install.packages(c("broom", "cachem", "cli", "cluster", "cutpointr", "DALEX", "data.table", "deldir", "dtplyr", "farver", "gert", "ggraph", "ggsignif", "gifski", "glmnet", "Hmisc", "isoband", "lifecycle", "lubridate", "mathjaxr", "MatrixModels", "mgcv", "mime", "pillar", "pkgload", "ps", "quantreg", "RcppParallel", "rgl", "rio", "rmarkdown", "rstatix", "SparseM", "splines2", "svglite", "testthat", "tibble", "tidyr", "units"))
install.packages(c("broom", "cachem", "cli", "cluster", "cutpointr", "DALEX", "data.table", "deldir", "dtplyr", "farver", "gert", "ggraph", "ggsignif", "gifski", "glmnet", "Hmisc", "isoband", "lifecycle", "lubridate", "mathjaxr", "MatrixModels", "mgcv", "mime", "pillar", "pkgload", "ps", "quantreg", "RcppParallel", "rgl", "rio", "rmarkdown", "rstatix", "SparseM", "splines2", "svglite", "testthat", "tibble", "tidyr", "units"))
setwd('~/Thesis/Analysis/Predicting Form and Risk')
setwd('~/Thesis/Analysis/Predicting Form and Risk')
library(inventoryfunctions)
library(tidyr)
library(readr)
library(forcats)
library(raster)
library(ncdf4)
library(rgdal)
trees <- readr::read_csv("/Users/ryansmith/Thesis/MasterData/Clean/Tree Data Clean/AllCleanTreeLevelData.csv")
View(trees)
head(trees)
trees <- trees %>%
dplyr::select(Region, Stand, Plot, Tree, BAF, SPP, DBH, HT, Form, Risk, Longitude, Latitude)
glimpse(trees)
trees$Region <- as_factor(trees$Region)
trees$Stand <- as_factor(trees$Stand)
trees$Stand <- as_factor(trees$Stand)
trees$Form <- as_factor(trees$Form)
trees$Risk <- as_factor(trees$Risk)
trees$SPP <- as_factor(trees$SPP)
trees <- trees %>%
dplyr::rename(Y = Latitude, X = Longitude)
cord <- data.frame(trees$X, trees$Y)
sp::coordinates(cord) <- cord
sp::proj4string(cord) <- sp::CRS("+proj=longlat +datum=WGS84")
CSI <- raster::raster("/Users/ryansmith/Thesis/GIS/Climate Site Index/EastSI_ENSEMBLE_rcp60_2030.tif")
BMGI <- raster::raster("/Users/ryansmith/Thesis/GIS/BGI Raster/BGI_S2REP_ME_Update.tif")
CSIdata   <- raster::extract(CSI, cord, method = 'simple', df = TRUE)
BMGIdata  <- raster::extract(BMGI, cord, method = 'simple', df = TRUE)
trees$CSI <- CSIdata$EastSI_ENSEMBLE_rcp60_2030
trees$BMGI <- BMGIdata$BGI_S2REP_ME_Update
rm(CSI, BMGI, CSIdata, BMGIdata)
for(i in 1:length(dat)){
var=dat[i]
assign(paste(var,sep=""),raster(paste(var,'.nc',sep=""),
crs='+proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-95 +x_0=0 +y_0=0
+datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0'))
print(i)
}
setwd("~/Thesis/MasterData/Unedited/Climate Variables/NA_NORM_8110_Bioclim_netCDF_Past")
setwd('~/Thesis/MasterData/Unedited/Climate Variables/NA_NORM_8110_Bioclim_netCDF_Past')
dat=c('AHM','bFFP','CMD','DD5','DD18','DD_0','DD_18','eFFP','EMT','Eref','EXT','FFP','MAP',
'MAR’,’daMAT','MCMT','MSP','MWMT','NFFD','PAS','PPT_sm','PPT_wt','RH','SHM','Tave_sm',
'Tave_wt','TD')
for(i in 1:length(dat)){
var=dat[i]
assign(paste(var,sep=""),raster(paste(var,'.nc',sep=""),
crs='+proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-95 +x_0=0 +y_0=0
+datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0'))
print(i)
}
dat=c('AHM','bFFP','CMD','DD5','DD18','DD_0','DD_18','eFFP','EMT','Eref','EXT','FFP','MAP',
'MAR','MCMT','MSP','MWMT','NFFD','PAS','PPT_sm','PPT_wt','RH','SHM','Tave_sm',
'Tave_wt','TD')
for(i in 1:length(dat)){
var=dat[i]
assign(paste(var,sep=""),raster(paste(var,'.nc',sep=""),
crs='+proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-95 +x_0=0 +y_0=0
+datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0'))
print(i)
}
View(AHM)
plot(AHM)
all=stack(AHM,bFFP,CMD,DD5,DD18,DD_0,DD_18,eFFP,EMT,Eref,EXT,FFP,MAP,
MAR,MAT,MCMT,MSP,MWMT,NFFD,PAS,PPT_sm,PPT_wt,RH,SHM,Tave_sm,
Tave_wt,TD)
all=stack('AHM','bFFP','CMD','DD5','DD18','DD_0','DD_18','eFFP','EMT','Eref','EXT','FFP','MAP',
'MAR','MCMT','MSP','MWMT','NFFD','PAS','PPT_sm','PPT_wt','RH','SHM','Tave_sm',
'Tave_wt','TD')
View(DD_0)
all=stack('AHM','bFFP','CMD','DD5','DD18','DD_0','DD_18','eFFP','EMT','Eref','EXT','FFP','MAP',
'MAR','MCMT','MSP','MWMT','NFFD','PAS','PPT_sm','PPT_wt','RH','SHM','Tave_sm',
'Tave_wt','TD')
all <- raster::stack('AHM','bFFP','CMD','DD5','DD18','DD_0','DD_18','eFFP','EMT','Eref','EXT','FFP','MAP',
'MAR','MCMT','MSP','MWMT','NFFD','PAS','PPT_sm','PPT_wt','RH','SHM','Tave_sm',
'Tave_wt','TD')
all <- raster::stack('AHM','bFFP')
dat=c('AHM','bFFP','CMD','DD5','DD18','DD_0','DD_18','eFFP','EMT','Eref','EXT','FFP','MAP',
'MAR','MCMT','MSP','MWMT','NFFD','PAS','PPT_sm','PPT_wt','RH','SHM','Tave_sm',
'Tave_wt','TD')
for(i in 1:length(dat)){
var=dat[i]
assign(paste(var,sep=""),raster(paste(var,'.nc',sep=""),
crs='+proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-95 +x_0=0 +y_0=0
+datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0'))
print(i)
}
for(i in 1:length(dat)){
var=dat[i]
assign(paste(var,sep=""),raster(paste(var,'.nc',sep=""),
crs='+proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-95 +x_0=0 +y_0=0
+datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0'))
print(names(i))
}
print(i)
for(i in 1:length(dat)){
var=dat[i]
assign(paste(var,sep=""),raster(paste(var,'.nc',sep=""),
crs='+proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-95 +x_0=0 +y_0=0
+datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0'))
print(i)
}
assign(paste(EMT,sep=""),
raster(paste(var,'.nc',sep=""),
crs='+proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-95 +x_0=0 +y_0=0
+datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0'))
dat=c('AHM','bFFP','CMD','DD5','DD18','DD_0','DD_18','eFFP','EMT','Eref','EXT','FFP','MAP',
'MAR','MCMT','MSP','MWMT','NFFD','PAS','PPT_sm','PPT_wt','RH','SHM','Tave_sm',
'Tave_wt','TD')
for(i in 1:length(dat)){
var=dat[i]
assign(paste(var,sep=""),
raster(paste(var,'.nc',sep=""),
crs='+proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-95 +x_0=0 +y_0=0
+datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0'))
print(i)
}
all <- raster::stack('AHM','bFFP')
all <- c('AHM','bFFP','CMD','DD5','DD18','DD_0','DD_18','eFFP','EMT','Eref','EXT','FFP','MAP',
'MAR','MCMT','MSP','MWMT','NFFD','PAS','PPT_sm','PPT_wt','RH','SHM','Tave_sm',
'Tave_wt','TD')
LL
all
all <- raster::stack(AHM,bFFP,CMD,DD5,DD18)
all <- raster::stack(AHM,bFFP,CMD,DD5,DD18,DD_0,DD_18,eFFP,EMT,Eref,EXT,FFP,MAP,
MAR,MCMT,MSP,MWMT,NFFD,PAS,PPT_sm,PPT_wt,RH,SHM,Tave_sm,
Tave_wt,TD)
all=projectRaster(all,crs='+proj=longlat +datum=NAD83')
test <- projectRaster(AHM, crs='+proj=longlat +datum=NAD83')
a <- raster(paste("AHM", ".nc"),crs='+proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-95 +x_0=0 +y_0=0
+datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0')
a <- raster(paste("AHM", ".nc", sep=""),crs='+proj=lcc +lat_1=49 +lat_2=77 +lat_0=0 +lon_0=-95 +x_0=0 +y_0=0
+datum=WGS84 +units=m +no_defs +ellps=WGS84 +towgs84=0,0,0')
b <- paste("g","g")
b
paste("g","g",sep="")
paste("INV", 23, 5245, 23, 2, sep="-")
library(devtools)
library(roxygen2)
setwd("~/Thesis/R Script/My Scripts/Packages/inventoryfunctions")
build()
install.packages("~/Thesis/R Script/My Scripts/Packages/inventoryfunctions_0.0.2.tar.gz", repos = NULL, type = "source")
library(inventoryfunctions)
a <- Genus("BA")
a[1]
a[2]
a[3]
install.packages("broom")
devtools::install_github
devtools::install_github()
git config --global user.email "Ryan.Smith6@maine.edu"
111-70
68-26
library(devtools)
library(roxygen2)
document()
genus("HH")
Genus('HH')
Genus <- function(SPP){
SPcodes <- c(
'AB',  # AB=American beech
'AE',  # AE=American Elm
'AS',  # AS=ash
'BA',  # BA=black ash
'BC',  # BC=black cherry
'BF',  # BF=balsam fir
'BO',  # BO=Black Oak
'BP',  # BP=balsam poplar
'BS',  # BS=black spruce
'BT',  # BT=bigtooth aspen
'BW',  # BW=Basswood
'EC',  # EC=eastern cottonwood
'EH',  # EH=eastern hemlock
'GA',  # GA=green ash
'GB',  # GB=gray birch
'HH',  # HH=eastern hophornbeam
'JP',  # JP=jack pine
'NS',  # NS=Norway spruce
'OC',  # OC=Other Cedar
'OH',  # OH=other hardwoods
'OS',  # OS=other softwoods
'PB',  # PB=paper birch
'PC',  # PC=pin cherry
'PR',  # PR=pin cherry
'QA',  # QA=quaking aspen
'RB',  # RB=river birch
'RM',  # RM=red maple
'RP',  # RP=red pine
'RN',  # RN=red pine
'RO',  # RO=red oak
'RS',  # RS=red spruce
'SB',  # SB=Sweet birch
'SH',  # SH=Shagbark Hickory
'SM',  # SM=sugar maple
'ST',  # ST=striped maple
'TA',  # TA=larch/tamarack
'WA',  # WA=white ash
'WC',  # WC=northern white cedar
'WO',  # WO=White Oak
'WP',  # WP=white pine
'WS',  # WS=white spruce
'YB',  # YB=yellow birch
'99')  # other
SPCommonName <- c(
'American beech', # AB=American beech
'American Elm',  # AE=American Elm
'Ash Species', # AS=ash
'Black Ash', # BA=black ash
'Black Cherry', # BC=black cherry
'Balsam Fir', # BF=balsam fir
'Black Oak',  # BO=Black Oak
'Balsam Poplar', # BP=balsam poplar
'Black Spruce', # BS=black spruce
'Bigtooth Aspen', # BT=bigtooth aspen
'Basswood',  # BW=Basswood
'Eastern Cottonwood', # EC=eastern cottonwood
'Eastern Hemlock', # EH=eastern hemlock
'Green Ash', # GA=green ash
'Gray Birch', # GB=gray birch
'Eastern Hophornbeam', # HH=eastern hophornbeam
'Jack Pine', # JP=jack pine
'Norway Spruce', # NS=Norway spruce
'Other Cedar',  # OC=Other Cedar
'Other Hardwoods', # OH=other hardwoods
'Other Softwoods', # OS=other softwoods
'Paper Birch', # PB=paper birch
'Pin Cherry', # PC=pin cherry
'Pin Cherry', # PR=pin cherry
'Quaking Aspen', # QA=quaking aspen
'River Birch', # RB=river birch
'Red Maple', # RM=red maple
'Red Pine', # RP=red pine
'Red Pine', # RN=red pine
'Red Oak', # RO=red oak
'Red Spruce', # RS=red spruce
'Sweet Birch', # SB=Sweet birch
'Shagbark Hickory',  # SH=Shagbark Hickory
'Sugar Maple', # SM=sugar maple
'Striped Maple', # ST=striped maple
'Tamarack', # TA=larch/tamarack
'White Ash', # WA=white ash
'Northern White Cedar', # WC=northern white cedar
'White Oak',  # WO=White Oak
'White Pine', # WP=white pine
'White Spruce', # WS=white spruce
'Yellow Birch', # YB=yellow birch
'Other') # other
attrs <- matrix (c(
# Genus      # Simple Name  #HW/SW
'Fagus',       'Beech',       'HW',   # AB=American beech
'Ulmus',       'Elm',         'HW',   # AE=American Elm
'Fraxinus',    'Ash',         'HW',   # AS=ash
'Fraxinus',    'Ash',         'HW',   # BA=black ash
'Prunus',      'Cherry',      'HW',   # BC=black cherry
'Abies',       'Fir',         'SW',   # BF=balsam fir
'Quercus',     'Oak',         'HW',   # BO=Black Oak
'Populus',     'Poplar',      'HW',   # BP=balsam poplar
'Picea',       'Spruce',      'SW',   # BS=black spruce
'Populus',     'Aspen',       'HW',   # BT=bigtooth aspen
'Tilia',       'Basswood',    'HW',   # BW=Basswood
'Populus',     'Cottonwood',  'HW',   #EC=eastern cottonwood
'Tsuga',       'Hemlock',     'SW',  # EH=eastern hemlock
'Fraxinus',    'Ash',         'HW',   # GA=green ash
'Betula',      'Birch',       'HW',  # GB=gray birch
'Ostrya',      'Hophornbeam', 'HW',  # HH=eastern hophornbeam
'Pinus',       'Pine',        'SW', # JP=jack pine
'Picea',       'Spruce',      'SW', # NS=Norway spruce
'Thuja',       'Cedar',       'SW', # OC=Other Cedar
'Hardwood',    'Hardwood',    'HW', # OH=other hardwoods
'Softwood',    'Softwood',    'SW', # OS=other softwoods
'Betula',      'Birch',       'HW', # PB=paper birch
'Prunus',      'Cherry',      'HW', # PC=pin cherry
'Prunus',      'Cherry',      'HW', # PR=pin cherry
'Populus',     'Aspen',       'HW', # QA=quaking aspen
'Betula',      'Birch',       'HW', # RB=river birch
'Acer',        'Maple',       'HW', # RM=red maple
'Pinus',       'Pine',        'SW', # RP=red pine
'Pinus',       'Pine',        'SW', # RN=red pine
'Quercus',     'Oak',         'HW', # RO=red oak
'Picea',       'Spruce',      'SW', # RS=red spruce
'Betula',      'Birch',       'HW', # SB=Sweet birch
'Carya',       'Hickory',     'HW', # SH=Shagbark Hickory
'Acer',        'Maple',       'HW', # SM=sugar maple
'Acer',        'Maple',       'HW', # ST=striped maple
'Larix',       'Larch',       'SW', # TA=larch/tamarack
'Fraxinus',    'Ash',         'HW',# WA=white ash
'Thuja',       'Cedar',       'SW', # WC=northern white cedar
'Quercus',     'Oak',         'HW', # WO=White Oak
'Pinus',       'Pine',        'SW', # WP=white pine
'Picea',       'Spruce',      'SW', # WS=white spruce
'Betula',      'Birch',       'HW', # YB=yellow birch
'Other',       'Other'),      'HW', # other
ncol=3,byrow=TRUE)
sprow = match(SPP,SPcodes)
sprow[is.na(sprow)] = length(SPcodes)
# Common Name [1] : Genus [2] : Simple[3] : WoodType[4]
return(c(Common=SPCommonName[sprow],
Genus=attrs[sprow,1], Simple=attrs[sprow,2], WoodType=attrs[sprow,3]))
}
Genus()
Genus("HH")
Genus <- function(SPP){
SPcodes <- c(
'AB',  # AB=American beech
'AE',  # AE=American Elm
'AS',  # AS=ash
'BA',  # BA=black ash
'BC',  # BC=black cherry
'BF',  # BF=balsam fir
'BO',  # BO=Black Oak
'BP',  # BP=balsam poplar
'BS',  # BS=black spruce
'BT',  # BT=bigtooth aspen
'BW',  # BW=Basswood
'EC',  # EC=eastern cottonwood
'EH',  # EH=eastern hemlock
'GA',  # GA=green ash
'GB',  # GB=gray birch
'HH',  # HH=eastern hophornbeam
'JP',  # JP=jack pine
'NS',  # NS=Norway spruce
'OC',  # OC=Other Cedar
'OH',  # OH=other hardwoods
'OS',  # OS=other softwoods
'PB',  # PB=paper birch
'PC',  # PC=pin cherry
'PR',  # PR=pin cherry
'QA',  # QA=quaking aspen
'RB',  # RB=river birch
'RM',  # RM=red maple
'RP',  # RP=red pine
'RN',  # RN=red pine
'RO',  # RO=red oak
'RS',  # RS=red spruce
'SB',  # SB=Sweet birch
'SH',  # SH=Shagbark Hickory
'SM',  # SM=sugar maple
'ST',  # ST=striped maple
'TA',  # TA=larch/tamarack
'WA',  # WA=white ash
'WC',  # WC=northern white cedar
'WO',  # WO=White Oak
'WP',  # WP=white pine
'WS',  # WS=white spruce
'YB',  # YB=yellow birch
'99')  # other
SPCommonName <- c(
'American beech', # AB=American beech
'American Elm',  # AE=American Elm
'Ash Species', # AS=ash
'Black Ash', # BA=black ash
'Black Cherry', # BC=black cherry
'Balsam Fir', # BF=balsam fir
'Black Oak',  # BO=Black Oak
'Balsam Poplar', # BP=balsam poplar
'Black Spruce', # BS=black spruce
'Bigtooth Aspen', # BT=bigtooth aspen
'Basswood',  # BW=Basswood
'Eastern Cottonwood', # EC=eastern cottonwood
'Eastern Hemlock', # EH=eastern hemlock
'Green Ash', # GA=green ash
'Gray Birch', # GB=gray birch
'Eastern Hophornbeam', # HH=eastern hophornbeam
'Jack Pine', # JP=jack pine
'Norway Spruce', # NS=Norway spruce
'Other Cedar',  # OC=Other Cedar
'Other Hardwoods', # OH=other hardwoods
'Other Softwoods', # OS=other softwoods
'Paper Birch', # PB=paper birch
'Pin Cherry', # PC=pin cherry
'Pin Cherry', # PR=pin cherry
'Quaking Aspen', # QA=quaking aspen
'River Birch', # RB=river birch
'Red Maple', # RM=red maple
'Red Pine', # RP=red pine
'Red Pine', # RN=red pine
'Red Oak', # RO=red oak
'Red Spruce', # RS=red spruce
'Sweet Birch', # SB=Sweet birch
'Shagbark Hickory',  # SH=Shagbark Hickory
'Sugar Maple', # SM=sugar maple
'Striped Maple', # ST=striped maple
'Tamarack', # TA=larch/tamarack
'White Ash', # WA=white ash
'Northern White Cedar', # WC=northern white cedar
'White Oak',  # WO=White Oak
'White Pine', # WP=white pine
'White Spruce', # WS=white spruce
'Yellow Birch', # YB=yellow birch
'Other') # other
attrs <- matrix (c(
# Genus      # Simple Name  #HW/SW
'Fagus',       'Beech',       'HW',   # AB=American beech
'Ulmus',       'Elm',         'HW',   # AE=American Elm
'Fraxinus',    'Ash',         'HW',   # AS=ash
'Fraxinus',    'Ash',         'HW',   # BA=black ash
'Prunus',      'Cherry',      'HW',   # BC=black cherry
'Abies',       'Fir',         'SW',   # BF=balsam fir
'Quercus',     'Oak',         'HW',   # BO=Black Oak
'Populus',     'Poplar',      'HW',   # BP=balsam poplar
'Picea',       'Spruce',      'SW',   # BS=black spruce
'Populus',     'Aspen',       'HW',   # BT=bigtooth aspen
'Tilia',       'Basswood',    'HW',   # BW=Basswood
'Populus',     'Cottonwood',  'HW',   # EC=eastern cottonwood
'Tsuga',       'Hemlock',     'SW',   # EH=eastern hemlock
'Fraxinus',    'Ash',         'HW',   # GA=green ash
'Betula',      'Birch',       'HW',   # GB=gray birch
'Ostrya',      'Hophornbeam', 'HW',   # HH=eastern hophornbeam
'Pinus',       'Pine',        'SW',   # JP=jack pine
'Picea',       'Spruce',      'SW',   # NS=Norway spruce
'Thuja',       'Cedar',       'SW',   # OC=Other Cedar
'Hardwood',    'Hardwood',    'HW',   # OH=other hardwoods
'Softwood',    'Softwood',    'SW',   # OS=other softwoods
'Betula',      'Birch',       'HW',   # PB=paper birch
'Prunus',      'Cherry',      'HW',   # PC=pin cherry
'Prunus',      'Cherry',      'HW',   # PR=pin cherry
'Populus',     'Aspen',       'HW',   # QA=quaking aspen
'Betula',      'Birch',       'HW',   # RB=river birch
'Acer',        'Maple',       'HW',   # RM=red maple
'Pinus',       'Pine',        'SW',   # RP=red pine
'Pinus',       'Pine',        'SW',   # RN=red pine
'Quercus',     'Oak',         'HW',   # RO=red oak
'Picea',       'Spruce',      'SW',   # RS=red spruce
'Betula',      'Birch',       'HW',   # SB=Sweet birch
'Carya',       'Hickory',     'HW',   # SH=Shagbark Hickory
'Acer',        'Maple',       'HW',   # SM=sugar maple
'Acer',        'Maple',       'HW',   # ST=striped maple
'Larix',       'Larch',       'SW',   # TA=larch/tamarack
'Fraxinus',    'Ash',         'HW',   # WA=white ash
'Thuja',       'Cedar',       'SW',   # WC=northern white cedar
'Quercus',     'Oak',         'HW',   # WO=White Oak
'Pinus',       'Pine',        'SW',   # WP=white pine
'Picea',       'Spruce',      'SW',   # WS=white spruce
'Betula',      'Birch',       'HW',   # YB=yellow birch
'Other',       'Other',       'HW'),  # other
ncol=3,byrow=TRUE)
sprow = match(SPP,SPcodes)
sprow[is.na(sprow)] = length(SPcodes)
# Common Name [1] : Genus [2] : Simple[3] : WoodType[4]
return(c(Common=SPCommonName[sprow],
Genus=attrs[sprow,1], Simple=attrs[sprow,2], WoodType=attrs[sprow,3]))
}
Genus("HH")
Genus('99')
Genus('WS')
Genus("AE")
Genus("GB")
document()
library(inventoryfunctions)
build()
