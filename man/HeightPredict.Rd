% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HeightPredict.R
\name{HeightPredict}
\alias{HeightPredict}
\title{Predicted Height Values}
\usage{
HeightPredict(Stand, Plot, SPP, DBH, CSI, CCF, BAL, HT = NULL)
}
\arguments{
\item{Stand}{Stand ID for Plot where the nth tree is located.}

\item{Plot}{Plot ID for Plot where the nth tree is located.}

\item{SPP}{Species observation for every tree (FVS species code)}

\item{DBH}{Diameter at breast height in cm.}

\item{CSI}{Climate site index for each tree.}

\item{CCF}{Plot based Crown Competition Factor for each tree.}

\item{BAL}{Basal area of larger trees within the plot}

\item{HT}{Measured HT values for all trees with measured heights (trees with no heights should be entered as 0)}
}
\value{
This function returns a numeric vector of length n with values for all trees with missing heights.
}
\description{
This function predicts the heights of any trees that have missing height values. If no height values are provided,
heights will be predicted using the FVS acadian growth model (formula citation???). If height values are provided, this function
will leverage the provided height information by running the predicted heights and provided heights through the following
equation (HT ~ HTPred + (1|SPP/Stand/Plot)) - Species, Stand, and Plot are integrated into the equation as random effects. You must enter
both Stand and Plot inputs, the random effects will adjust accordingly.
}
\details{
This function requires that all data be entered as a vector of length n. See example.
}
\examples{
\dontrun{

 ###### RUNNING THE SCRIPT ######
 ###### REQUIRES FULL VECTORS #####
 ###### AS SEEN HERE ######

 trees$HT <-  HeightPredict(trees$Stand, trees$Plot, trees$SPP, trees$DBH,
                            trees$CSI, trees$CCF, trees$BAL, trees$HT)

 ##### RUN WITH FULL VECTORS AND NOT WITH MAPPLY #####

data(tree_data)
trees <- tree_data

cord <- data.frame(trees$X, trees$Y)
sp::coordinates(cord) <- cord
sp::proj4string(cord) <- sp::CRS("+proj=longlat +datum=WGS84")
CSI <- raster::raster("EastSI_ENSEMBLE_rcp60_2030.tif")
CSIdata   <- raster::extract(CSI, cord, method = 'simple', df = TRUE)
trees$CSI <- CSIdata$EastSI_ENSEMBLE_rcp60_2030

trees <- trees \%>\%
dplyr::mutate(
 EXPF = EXP.F(DBH, BAF),
 SDIPlot = SDI.Plot(Stand, Plot, Tree, DBH, EXPF),
 SDIMax = SDI.Max(Stand, Plot, Tree, SPP, DBH = DBH, EXPF = EXPF, CSI = CSI, X_Coord = X, Y_Coord = Y),
 BA = BA(DBH),
 CCF = CrownCompF(Stand, Plot, Tree, SPP, DBH, EXPF),
 ID = Unique.ID(Stand, Plot),
 RD = RD(SDIPlot, SDIMax),
 BAPH = BAPH(Stand, Plot, BA, EXPF),
 TPH = TPH(Stand, Plot, DBH, EXPF)
)
trees <- trees \%>\%
 dplyr::group_by(ID) \%>\%
 dplyr::arrange(desc(DBH), .by_group = TRUE)
trees <- trees \%>\%
 dplyr::mutate(
   BAL = BA.Larger.Trees(ID, DBH, BA)
 )

 trees$HT <-  HeightPredict(trees$Stand, trees$Plot, trees$SPP, trees$DBH,
                            trees$CSI, trees$CCF, trees$BAL, trees$HT)

}
}
\references{
NEED TO WRITE REFERENCES
}
\seealso{
\link{BAL}

\link{CCF}

Other Plot Level Functions: 
\code{\link{BA.Larger.Trees}()},
\code{\link{BAPH}()},
\code{\link{CCF.Larger}()},
\code{\link{CrownCompF}()},
\code{\link{QMD}()},
\code{\link{RD}()},
\code{\link{SDI.Max}()},
\code{\link{SDI.Plot}()},
\code{\link{TPH}()},
\code{\link{TallestTrees}()},
\code{\link{Unique.ID}()}
}
\author{
Ryan Smith
}
\concept{Plot Level Functions}
